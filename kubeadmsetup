master:

    1  swapoff -a
    2  sed -i '/ swap / s/^\(.*\)$/#\1/g' /etc/fstab
    3  cat /etc/fstab 
    4  lsmod | grep br_netfilter 
    5  sudo modprobe br_netfilter
    6  cat <<EOF | sudo tee /etc/sysctl.d/k8s.conf
net.bridge.bridge-nf-call-ip6tables = 1
net.bridge.bridge-nf-call-iptables = 1
EOF

    7  sudo sysctl --system
    8  apt-get update 
    9  apt install docker.io
   10  systemctl status docker
   11  cat <<EOF | sudo tee /etc/docker/daemon.json
{
  "exec-opts": ["native.cgroupdriver=systemd"],
  "log-driver": "json-file",
  "log-opts": {
    "max-size": "100m"
  },
  "storage-driver": "overlay2"
}
EOF

   12  systemctl daemon-reload
   13  systemctl enable docker
   14  systemctl status docker
   15  clear
   16  ls -lrt
   17  apt-get update && sudo apt-get install -y apt-transport-https curl
   18  curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key add -
   19  cat <<EOF | sudo tee /etc/apt/sources.list.d/kubernetes.list
deb https://apt.kubernetes.io/ kubernetes-xenial main
EOF

   20  apt update
   21  apt-get install -y kubelet kubeadm kubectl
   22  clear
   23  which kubeadm
   24  apt-mark hold kubelet kubeadm kubectl
   25  systemctl daemon-reload
   26  systemctl restart kubelet
   27  systemctl status kubelet
   28  clear
   29  kubeadm init --pod-network-cidr 10.0.0.0/16
   30  mkdir -p $HOME/.kube
   31  sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
   32  sudo chown $(id -u):$(id -g) $HOME/.kube/config
   33  kubectl get node
   34  kubectl apply -f "https://cloud.weave.works/k8s/net?k8s-version=$(kubectl version | base64 | tr -d '\n')"
   35  kubectl apply -f https://github.com/weaveworks/weave/releases/download/v2.8.1/weave-daemonset-k8s.yaml
   36  kubectl get node
   37  kubectl get pod --all-namespaces
   38  kubectl get node
   39  history
   
   
   node:
   
       1  swapoff -a
    2  sed -i '/ swap / s/^\(.*\)$/#\1/g' /etc/fstab
    3  sudo modprobe br_netfilter
    4  cat <<EOF | sudo tee /etc/sysctl.d/k8s.conf
net.bridge.bridge-nf-call-ip6tables = 1
net.bridge.bridge-nf-call-iptables = 1
EOF

    5  sudo sysctl --system
    6  apt-get update 
    7  apt install docker.io
    8  cat <<EOF | sudo tee /etc/docker/daemon.json
{
  "exec-opts": ["native.cgroupdriver=systemd"],
  "log-driver": "json-file",
  "log-opts": {
    "max-size": "100m"
  },
  "storage-driver": "overlay2"
}
EOF

    9  systemctl daemon-reload
   10  systemctl restart docker
   11  apt-get update && sudo apt-get install -y apt-transport-https curl
   12  curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key add -
   13  apt-get update
   14  apt-get install -y kubelet kubeadm kubectl
   15  apt-mark hold kubelet kubeadm kubectl
   16  systemctl daemon-reload
   17  systemctl enable kubelet
   18  systemctl restart kubelet
   19  kubeadm join 172.31.47.65:6443 --token wvyzbi.1uqs8xzsr1rnc4ca --discovery-token-ca-cert-hash sha256:01607921b755c439d4db5bf7036720974b34b7dd390ea0132342b17159111d05
   20  history



client:
apt-get update && sudo apt-get install -y apt-transport-https curl
   80  sudo apt-get update && sudo apt-get install -y apt-transport-https curl
   81  curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key add -
   82  sudo cat <<EOF | sudo tee /etc/apt/sources.list.d/kubernetes.list
deb https://apt.kubernetes.io/ kubernetes-xenial main
EOF

   83  sudo apt update
   84  sudo apt install kubectl -y
   85  clear
   86  kubectl
   87  kubectl get node
   88  mkdir .kube
   89  cd .kube/
   90  touh config
   91  touch config
   92  vi config 
   93  kubectl get node
   94  clear
   95  cd
   96  kubectl get pod --all-namespaces
   97  kubectl apply -f https://raw.githubusercontent.com/kubernetes/dashboard/v2.7.0/aio/deploy/recommended.yaml
   98  kubectl get svc -n kubernetes-dashboard
   99  kubectl edit svc kubernetes-dashboard -n kubernetes-dashboard
  100  kubectl get svc -n kubernetes-dashboard
  101  clear
  102  touch role.yml
  103  vi role.yml 
  104  kubectl apply -f role.yml 
  105  kubectl get -f role.yml 
  106  kubectl -n kubernetes-dashboard create token admin-user
